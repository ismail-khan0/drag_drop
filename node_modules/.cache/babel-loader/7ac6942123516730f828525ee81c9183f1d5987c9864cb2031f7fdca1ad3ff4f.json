{"ast":null,"code":"var _jsxFileName = \"/home/ismail/React/drag-drop/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Table from \"./Components/Table\";\nimport Mapping from \"./Components/Mapping\";\nimport Deletebtn from \"./Components/Deletebtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [droppedButtons, setDroppedButtons] = useState([]);\n  const [buttonText, setButtonText] = useState(\"\");\n  const [tabledata, settabledata] = useState([[\"\", \"Autumn 1\", \"Autumn 2 \", \"Autumn 3\", \"Autumn 4\", \"Autumn 5\", \"Autumn 6\"], [\"EYFS\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"KSY1\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"KSY2\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"KSY3\", \"\", \"\", \"\", \"\", \"\", \"\"]]);\n  const handleDelete = buttonData => {\n    // Remove the dropped button from the droppedButtons state array\n    setDroppedButtons(prevState => prevState.filter(data => data !== buttonData));\n\n    // Get the cell that contains the dropped button\n    const cell = document.querySelector(`[data-button=\"${buttonData}\"]`);\n    if (!cell) return;\n\n    // Get the cell content without the dropped button\n    const updatedContent = cell.innerHTML.replace(`<div class=\"button-wrapper\">${buttonData}<span class=\"delete-button\" data-delete>×</span></div>`, \"\");\n\n    // Update the table data state with the updated cell content\n    const rowIndex = cell.parentNode.rowIndex;\n    const cellIndex = cell.cellIndex;\n    const updatedTableData = [...tabledata];\n    updatedTableData[rowIndex][cellIndex] = updatedContent;\n    settabledata(updatedTableData);\n  };\n  console.log(tabledata);\n  const handleDrop = event => {\n    event.preventDefault();\n    const data = event.dataTransfer.getData(\"button\");\n    const target = event.target;\n\n    // Check if the target is a td element\n    if (target.tagName !== \"TD\") {\n      return;\n    }\n    const existingContent = target.innerHTML;\n\n    // Check if the cell already has two buttons\n    if (existingContent.split(\"<button\").length - 1 >= 2) {\n      alert(\"You can only drop two buttons in each cell!\");\n      return;\n    }\n\n    // Check if the cell contains any of the restricted values\n    const restrictedValues = [\"Autumn\", \"EYFS\", \"KSY1\", \"KSY2\", \"KSY3\"];\n    const containsRestrictedValue = restrictedValues.some(value => existingContent.includes(value));\n    if (containsRestrictedValue) {\n      alert(\"This cell cannot receive buttons!\");\n      return;\n    }\n\n    // Check if the button already exists in the cell\n    if (existingContent.includes(data)) {\n      alert(\"This button already exists in the cell!\");\n      return;\n    }\n\n    // Add the new button to the cell\n    const buttonWrapper = document.createElement(\"div\");\n    buttonWrapper.className = \"button-wrapper\";\n    buttonWrapper.innerHTML = `${data}<span class=\"delete-button\" data-delete>×</span>`;\n    target.appendChild(buttonWrapper);\n\n    // Get the updated cell content and update the table data state\n    const updatedContent = target.innerHTML;\n    const rowIndex = target.parentNode.rowIndex;\n    const cellIndex = target.cellIndex;\n    const updatedTableData = [...tabledata];\n    updatedTableData[rowIndex][cellIndex] = updatedContent;\n    settabledata(updatedTableData);\n\n    // Add the dropped button to the droppedButtons state array\n    setDroppedButtons(prevState => [...prevState, data]);\n\n    // Add event listener for delete button\n    const deleteBtn = buttonWrapper.querySelector(\".delete-button\");\n    deleteBtn.addEventListener(\"dragstart\", event => {\n      const buttonWrapper = event.currentTarget.parentNode;\n      const cell = buttonWrapper.parentNode;\n      const rowIndex = cell.parentNode.rowIndex;\n      const cellIndex = cell.cellIndex;\n\n      // Remove the button from the cell\n      cell.removeChild(buttonWrapper);\n\n      // Get the updated cell content and update the table data state\n      const updatedContent = cell.innerHTML;\n      const updatedTableData = [...tabledata];\n      updatedTableData[rowIndex][cellIndex] = updatedContent;\n      settabledata(updatedTableData);\n    });\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 40\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Mapping, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Deletebtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        buttonText: buttonText,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onDelete: handleDelete,\n        tableData: tabledata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3jxO15GVMEPoxszAFl69bbzTRZk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Table","Mapping","Deletebtn","jsxDEV","_jsxDEV","App","_s","droppedButtons","setDroppedButtons","buttonText","setButtonText","tabledata","settabledata","handleDelete","buttonData","prevState","filter","data","cell","document","querySelector","updatedContent","innerHTML","replace","rowIndex","parentNode","cellIndex","updatedTableData","console","log","handleDrop","event","preventDefault","dataTransfer","getData","target","tagName","existingContent","split","length","alert","restrictedValues","containsRestrictedValue","some","value","includes","buttonWrapper","createElement","className","appendChild","deleteBtn","addEventListener","currentTarget","removeChild","handleDragOver","style","display","alignItems","flexDirection","justifyContent","children","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onDelete","tableData","_c","$RefreshReg$"],"sources":["/home/ismail/React/drag-drop/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"./Components/Table\";\nimport Mapping from \"./Components/Mapping\";\nimport Deletebtn from \"./Components/Deletebtn\";\nfunction App() {\n  const [droppedButtons, setDroppedButtons] = useState([]);\n  const [buttonText, setButtonText] = useState(\"\");\n  const [tabledata, settabledata] = useState([\n    [\n      \"\",\n      \"Autumn 1\",\n      \"Autumn 2 \",\n      \"Autumn 3\",\n      \"Autumn 4\",\n      \"Autumn 5\",\n      \"Autumn 6\",\n    ],\n    [\"EYFS\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"KSY1\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"KSY2\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"KSY3\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  ]);\n\n  const handleDelete = (buttonData) => {\n    // Remove the dropped button from the droppedButtons state array\n    setDroppedButtons((prevState) =>\n      prevState.filter((data) => data !== buttonData)\n    );\n  \n    // Get the cell that contains the dropped button\n    const cell = document.querySelector(`[data-button=\"${buttonData}\"]`);\n    if (!cell) return;\n  \n    // Get the cell content without the dropped button\n    const updatedContent = cell.innerHTML.replace(\n      `<div class=\"button-wrapper\">${buttonData}<span class=\"delete-button\" data-delete>×</span></div>`,\n      \"\"\n    );\n  \n    // Update the table data state with the updated cell content\n    const rowIndex = cell.parentNode.rowIndex;\n    const cellIndex = cell.cellIndex;\n    const updatedTableData = [...tabledata];\n    updatedTableData[rowIndex][cellIndex] = updatedContent;\n    settabledata(updatedTableData);\n  };\n  \n  \n  console.log(tabledata);\n  \n  const handleDrop = (event) => {\n    event.preventDefault();\n    const data = event.dataTransfer.getData(\"button\");\n    const target = event.target;\n  \n    // Check if the target is a td element\n    if (target.tagName !== \"TD\") {\n      return;\n    }\n  \n    const existingContent = target.innerHTML;\n  \n    // Check if the cell already has two buttons\n    if (existingContent.split(\"<button\").length - 1 >= 2) {\n      alert(\"You can only drop two buttons in each cell!\");\n      return;\n    }\n  \n    // Check if the cell contains any of the restricted values\n    const restrictedValues = [\"Autumn\", \"EYFS\", \"KSY1\", \"KSY2\", \"KSY3\"];\n    const containsRestrictedValue = restrictedValues.some((value) =>\n      existingContent.includes(value)\n    );\n    if (containsRestrictedValue) {\n      alert(\"This cell cannot receive buttons!\");\n      return;\n    }\n  \n    // Check if the button already exists in the cell\n    if (existingContent.includes(data)) {\n      alert(\"This button already exists in the cell!\");\n      return;\n    }\n  \n    // Add the new button to the cell\n    const buttonWrapper = document.createElement(\"div\");\n    buttonWrapper.className = \"button-wrapper\";\n    buttonWrapper.innerHTML = `${data}<span class=\"delete-button\" data-delete>×</span>`;\n    target.appendChild(buttonWrapper);\n  \n    // Get the updated cell content and update the table data state\n    const updatedContent = target.innerHTML;\n    const rowIndex = target.parentNode.rowIndex;\n    const cellIndex = target.cellIndex;\n    const updatedTableData = [...tabledata];\n    updatedTableData[rowIndex][cellIndex] = updatedContent;\n    settabledata(updatedTableData);\n  \n    // Add the dropped button to the droppedButtons state array\n    setDroppedButtons((prevState) => [...prevState, data]);\n  \n    // Add event listener for delete button\n    const deleteBtn = buttonWrapper.querySelector(\".delete-button\");\n    deleteBtn.addEventListener(\"dragstart\", (event) => {\n      const buttonWrapper = event.currentTarget.parentNode;\n      const cell = buttonWrapper.parentNode;\n      const rowIndex = cell.parentNode.rowIndex;\n      const cellIndex = cell.cellIndex;\n  \n      // Remove the button from the cell\n      cell.removeChild(buttonWrapper);\n  \n      // Get the updated cell content and update the table data state\n      const updatedContent = cell.innerHTML;\n      const updatedTableData = [...tabledata];\n      updatedTableData[rowIndex][cellIndex] = updatedContent;\n      settabledata(updatedTableData);\n    });\n  };\n  \n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div style={{ marginTop: 40 }}>\n        {\" \"}\n        <Mapping />\n      </div>\n      <div style={{ marginTop: 24 }}>\n        <Deletebtn/>\n      <Table\n  buttonText={buttonText}\n  onDrop={handleDrop}\n  onDragOver={handleDragOver}\n  onDelete={handleDelete}\n  tableData={tabledata}\n/>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}