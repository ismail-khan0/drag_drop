{"ast":null,"code":"var _jsxFileName = \"/home/ismail/React/drag-drop/src/Components/Table.js\";\nimport React from \"react\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  const tableRows = props.tableData.map((rowData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: rowData.map((cellData, cellIndex) => {\n      if (Array.isArray(cellData)) {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: cellData.map((buttonData, buttonIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onDragStart: event => {\n              event.dataTransfer.setData(\"button\", buttonData);\n            },\n            draggable: true,\n            children: buttonData\n          }, `${index}-${cellIndex}-${buttonIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }, this))\n        }, `${index}-${cellIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          onDrop: props.onDrop,\n          onDragOver: props.onDragOver,\n          children: cellData\n        }, `${index}-${cellIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: 1376,\n        border: \"solid #E6E6E6\",\n        backgroundColor: \"#F8F8F8\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: tableRows[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableRows.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","props","tableRows","tableData","map","rowData","index","children","cellData","cellIndex","Array","isArray","buttonData","buttonIndex","onDragStart","event","dataTransfer","setData","draggable","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","style","width","border","backgroundColor","slice","_c","$RefreshReg$"],"sources":["/home/ismail/React/drag-drop/src/Components/Table.js"],"sourcesContent":["import React from \"react\";\nimport \"./Table.css\";\n\nfunction Table(props) {\n\n  const tableRows = props.tableData.map((rowData, index) => (\n    <tr key={index}>\n      {rowData.map((cellData, cellIndex) => {\n        if (Array.isArray(cellData)) {\n          return (\n            <td key={`${index}-${cellIndex}`}>\n              {cellData.map((buttonData, buttonIndex) => (\n                <button\n                  key={`${index}-${cellIndex}-${buttonIndex}`}\n                  onDragStart={(event) => {\n                    event.dataTransfer.setData(\"button\", buttonData);\n                  }}\n                  draggable\n                >\n                  {buttonData}\n                </button>\n              ))}\n            </td>\n          );\n        } else {\n          return (\n            <td\n              key={`${index}-${cellIndex}`}\n              onDrop={props.onDrop}\n              onDragOver={props.onDragOver}\n            >\n              {cellData}\n            </td>\n          );\n        }\n      })}\n    </tr>\n  ));\n\n  return (\n    <div>\n      <table style={{width:1376,border: \"solid #E6E6E6\",backgroundColor:\"#F8F8F8\"}}>\n        <thead>\n          {tableRows[0]}\n        </thead>\n        <tbody>\n          {tableRows.slice(1)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAACC,KAAK,EAAE;EAEpB,MAAMC,SAAS,GAAGD,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACnDP,OAAA;IAAAQ,QAAA,EACGF,OAAO,CAACD,GAAG,CAAC,CAACI,QAAQ,EAAEC,SAAS,KAAK;MACpC,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,EAAE;QAC3B,oBACET,OAAA;UAAAQ,QAAA,EACGC,QAAQ,CAACJ,GAAG,CAAC,CAACQ,UAAU,EAAEC,WAAW,kBACpCd,OAAA;YAEEe,WAAW,EAAGC,KAAK,IAAK;cACtBA,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,UAAU,CAAC;YAClD,CAAE;YACFM,SAAS;YAAAX,QAAA,EAERK;UAAU,GANL,GAAEN,KAAM,IAAGG,SAAU,IAAGI,WAAY,EAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAQ9C;QAAC,GAXM,GAAEhB,KAAM,IAAGG,SAAU,EAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAY3B;MAET,CAAC,MAAM;QACL,oBACEvB,OAAA;UAEEwB,MAAM,EAAEtB,KAAK,CAACsB,MAAO;UACrBC,UAAU,EAAEvB,KAAK,CAACuB,UAAW;UAAAjB,QAAA,EAE5BC;QAAQ,GAJH,GAAEF,KAAM,IAAGG,SAAU,EAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKzB;MAET;IACF,CAAC;EAAC,GA7BKhB,KAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QA+Bf,CAAC;EAEF,oBACEvB,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAO0B,KAAK,EAAE;QAACC,KAAK,EAAC,IAAI;QAACC,MAAM,EAAE,eAAe;QAACC,eAAe,EAAC;MAAS,CAAE;MAAArB,QAAA,gBAC3ER,OAAA;QAAAQ,QAAA,EACGL,SAAS,CAAC,CAAC;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eACRvB,OAAA;QAAAQ,QAAA,EACGL,SAAS,CAAC2B,KAAK,CAAC,CAAC;MAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACQ,EAAA,GAhDQ9B,KAAK;AAkDd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}