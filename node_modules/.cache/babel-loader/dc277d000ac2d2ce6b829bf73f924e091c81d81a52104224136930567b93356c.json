{"ast":null,"code":"var _jsxFileName = \"/home/ismail/React/drag-drop/src/Components/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  _s();\n  const [cellButtonMap, setCellButtonMap] = useState({});\n  const handleDrop = (event, rowIndex, cellIndex) => {\n    var _cellButtonMap;\n    event.preventDefault();\n    const buttonText = event.dataTransfer.getData(\"button\");\n    if (!((_cellButtonMap = cellButtonMap[`${rowIndex}-${cellIndex}`]) !== null && _cellButtonMap !== void 0 && _cellButtonMap.includes(buttonText))) {\n      const newCellButtonMap = {\n        ...cellButtonMap,\n        [`${rowIndex}-${cellIndex}`]: [...(cellButtonMap[`${rowIndex}-${cellIndex}`] || []), buttonText]\n      };\n      setCellButtonMap(newCellButtonMap);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const tableRows = props.tableData.map((rowData, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: rowData.map((cellData, cellIndex) => {\n      const buttonTexts = cellButtonMap[`${rowIndex}-${cellIndex}`] || [];\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        onDrop: event => handleDrop(event, rowIndex, cellIndex),\n        onDragOver: handleDragOver,\n        children: buttonTexts.map((buttonText, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          draggable: \"true\",\n          children: buttonText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, `${rowIndex}-${cellIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: 1376,\n        border: \"solid #E6E6E6\",\n        backgroundColor: \"#F8F8F8\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: tableRows[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableRows.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"JmQHM20Y3R7wQUzzdn0ab2NvbxY=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Table","props","_s","cellButtonMap","setCellButtonMap","handleDrop","event","rowIndex","cellIndex","_cellButtonMap","preventDefault","buttonText","dataTransfer","getData","includes","newCellButtonMap","handleDragOver","tableRows","tableData","map","rowData","children","cellData","buttonTexts","onDrop","onDragOver","index","className","draggable","fileName","_jsxFileName","lineNumber","columnNumber","style","width","border","backgroundColor","slice","_c","$RefreshReg$"],"sources":["/home/ismail/React/drag-drop/src/Components/Table.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Table.css\";\n\nfunction Table(props) {\n  const [cellButtonMap, setCellButtonMap] = useState({});\n\n  const handleDrop = (event, rowIndex, cellIndex) => {\n    event.preventDefault();\n    const buttonText = event.dataTransfer.getData(\"button\");\n    if (!cellButtonMap[`${rowIndex}-${cellIndex}`]?.includes(buttonText)) {\n      const newCellButtonMap = {\n        ...cellButtonMap,\n        [`${rowIndex}-${cellIndex}`]: [\n          ...(cellButtonMap[`${rowIndex}-${cellIndex}`] || []),\n          buttonText,\n        ],\n      };\n      setCellButtonMap(newCellButtonMap);\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const tableRows = props.tableData.map((rowData, rowIndex) => (\n    <tr key={rowIndex}>\n      {rowData.map((cellData, cellIndex) => {\n        const buttonTexts = cellButtonMap[`${rowIndex}-${cellIndex}`] || [];\n        return (\n          <td\n            key={`${rowIndex}-${cellIndex}`}\n            onDrop={(event) => handleDrop(event, rowIndex, cellIndex)}\n            onDragOver={handleDragOver}\n          >\n            {buttonTexts.map((buttonText, index) => (\n              <button key={index} className=\"button\" draggable=\"true\">\n                {buttonText}\n              </button>\n            ))}\n          </td>\n        );\n      })}\n    </tr>\n  ));\n\n  return (\n    <div>\n      <table style={{ width: 1376, border: \"solid #E6E6E6\", backgroundColor: \"#F8F8F8\" }}>\n        <thead>{tableRows[0]}</thead>\n        <tbody>{tableRows.slice(1)}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}