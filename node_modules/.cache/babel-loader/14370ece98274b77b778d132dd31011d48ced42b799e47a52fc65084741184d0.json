{"ast":null,"code":"var _jsxFileName = \"/home/ismail/React/drag-drop/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Table from \"./Components/Table\";\nimport Mapping from \"./Components/Mapping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [buttonText, setButtonText] = useState(\"\");\n  const [tabledata, settabledata] = useState([[\"\", \"Autumn 1\", \"Autumn 2 \", \"Autumn 3\", \"Autumn 4\", \"Autumn 5\", \"Autumn 6\"], [\"EYFS\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"KSY1\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"KSY2\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"KSY3\", \"\", \"\", \"\", \"\", \"\", \"\"]]);\n  const handleDrop = (event, rowIndex, colIndex) => {\n    event.preventDefault();\n    const data = event.dataTransfer.getData(\"button\");\n    const tableCopy = [...tabledata];\n    const targetCell = tableCopy[rowIndex][colIndex];\n\n    // Check if the column already has two buttons\n    const numButtonsInColumn = tableCopy.slice(1).reduce((acc, row) => acc + Number(row[colIndex] !== \"\"), 0);\n    if (numButtonsInColumn >= 2) {\n      alert(\"You can only drop two buttons in each column!\");\n      return;\n    }\n\n    // Check if the cell contains any of the restricted values\n    const restrictedValues = [\"Autumn\", \"EYFS\", \"KSY1\", \"KSY2\", \"KSY3\"];\n    if (restrictedValues.some(value => targetCell.includes(value))) {\n      alert(\"This cell cannot receive buttons!\");\n      return;\n    }\n\n    // Add the button to the target cell\n    tableCopy[rowIndex][colIndex] += data;\n    settabledata(tableCopy);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 40\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Mapping, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        buttonText: buttonText,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        tableData: tabledata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2RcDJNcKhpKu60iU7W8muKkdALQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Table","Mapping","jsxDEV","_jsxDEV","App","_s","buttonText","setButtonText","tabledata","settabledata","handleDrop","event","rowIndex","colIndex","preventDefault","data","dataTransfer","getData","tableCopy","targetCell","numButtonsInColumn","slice","reduce","acc","row","Number","alert","restrictedValues","some","value","includes","handleDragOver","style","display","alignItems","flexDirection","justifyContent","children","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","tableData","_c","$RefreshReg$"],"sources":["/home/ismail/React/drag-drop/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"./Components/Table\";\nimport Mapping from \"./Components/Mapping\";\nfunction App() {\n  const [buttonText, setButtonText] = useState(\"\");\nconst [tabledata, settabledata] = useState([\n  [\"\", \"Autumn 1\", \"Autumn 2 \", \"Autumn 3\", \"Autumn 4\", \"Autumn 5\", \"Autumn 6\"],\n  [\"EYFS\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"KSY1\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"KSY2\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"KSY3\", \"\", \"\", \"\", \"\", \"\", \"\"]]\n);\n\nconst handleDrop = (event, rowIndex, colIndex) => {\n  event.preventDefault();\n  const data = event.dataTransfer.getData(\"button\");\n  const tableCopy = [...tabledata];\n  const targetCell = tableCopy[rowIndex][colIndex];\n\n  // Check if the column already has two buttons\n  const numButtonsInColumn = tableCopy.slice(1).reduce((acc, row) => acc + Number(row[colIndex] !== \"\"), 0);\n  if (numButtonsInColumn >= 2) {\n    alert(\"You can only drop two buttons in each column!\");\n    return;\n  }\n\n  // Check if the cell contains any of the restricted values\n  const restrictedValues = [\"Autumn\", \"EYFS\", \"KSY1\", \"KSY2\", \"KSY3\"];\n  if (restrictedValues.some(value => targetCell.includes(value))) {\n    alert(\"This cell cannot receive buttons!\");\n    return;\n  }\n\n  // Add the button to the target cell\n  tableCopy[rowIndex][colIndex] += data;\n  settabledata(tableCopy);\n};\n\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div style={{display:\"flex\",alignItems:\"center\",flexDirection:\"column\",justifyContent:\"center\"}}>\n     <div style={{marginTop:40}}> <Mapping /></div>\n     <div style={{marginTop:24}}>\n      <Table buttonText={buttonText} onDrop={handleDrop} onDragOver={handleDragOver} tableData={tabledata}/>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CACzC,CAAC,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAC7E,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAClC;EAED,MAAMW,UAAU,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IAChDF,KAAK,CAACG,cAAc,EAAE;IACtB,MAAMC,IAAI,GAAGJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACjD,MAAMC,SAAS,GAAG,CAAC,GAAGV,SAAS,CAAC;IAChC,MAAMW,UAAU,GAAGD,SAAS,CAACN,QAAQ,CAAC,CAACC,QAAQ,CAAC;;IAEhD;IACA,MAAMO,kBAAkB,GAAGF,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGE,MAAM,CAACD,GAAG,CAACX,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACzG,IAAIO,kBAAkB,IAAI,CAAC,EAAE;MAC3BM,KAAK,CAAC,+CAA+C,CAAC;MACtD;IACF;;IAEA;IACA,MAAMC,gBAAgB,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;IACnE,IAAIA,gBAAgB,CAACC,IAAI,CAACC,KAAK,IAAIV,UAAU,CAACW,QAAQ,CAACD,KAAK,CAAC,CAAC,EAAE;MAC9DH,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;;IAEA;IACAR,SAAS,CAACN,QAAQ,CAAC,CAACC,QAAQ,CAAC,IAAIE,IAAI;IACrCN,YAAY,CAACS,SAAS,CAAC;EACzB,CAAC;EAGC,MAAMa,cAAc,GAAIpB,KAAK,IAAK;IAChCA,KAAK,CAACG,cAAc,EAAE;EACxB,CAAC;EAED,oBACEX,OAAA;IAAK6B,KAAK,EAAE;MAACC,OAAO,EAAC,MAAM;MAACC,UAAU,EAAC,QAAQ;MAACC,aAAa,EAAC,QAAQ;MAACC,cAAc,EAAC;IAAQ,CAAE;IAAAC,QAAA,gBAC/FlC,OAAA;MAAK6B,KAAK,EAAE;QAACM,SAAS,EAAC;MAAE,CAAE;MAAAD,QAAA,GAAC,GAAC,eAAAlC,OAAA,CAACF,OAAO;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC9CvC,OAAA;MAAK6B,KAAK,EAAE;QAACM,SAAS,EAAC;MAAE,CAAE;MAAAD,QAAA,eAC1BlC,OAAA,CAACH,KAAK;QAACM,UAAU,EAAEA,UAAW;QAACqC,MAAM,EAAEjC,UAAW;QAACkC,UAAU,EAAEb,cAAe;QAACc,SAAS,EAAErC;MAAU;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACrC,EAAA,CAhDQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}